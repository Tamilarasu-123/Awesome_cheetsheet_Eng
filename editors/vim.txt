##############################################################################
# VIM CHEATSHEET (Chinese Quick Reference) - by skywind (created on 2017/10/12)
# Version: 47, Last Modified: 2020/10/10 11:02
# https://github.com/skywind3000/awesome-cheatsheets
##############################################################################

##############################################################################
# Cursor Movement
##############################################################################

h                   Move the cursor left, same as <Left> key
j                   Move the cursor down, same as <Down> key
k                   Move the cursor up, same as <Up> key
l                   Move the cursor right, same as <Right> key
CTRL-F              Next page
CTRL-B              Previous page
CTRL-U              Move half a screen up
CTRL-D              Move half a screen down
0                   Jump to the beginning of the line (the number zero, not the letter 'O'), equivalent to the <Home> key
^                   Jump to the first non-whitespace character at the beginning of the line
$                   Jump to the end of the line, equivalent to the <End> key
gg                  Jump to the first line, equivalent to CTRL+<Home>
G                   Jump to the last line, equivalent to CTRL+<End>
nG                  Jump to the nth line, for example, 10G moves to the tenth line
:n                  Jump to the nth line, for example, :10<Enter> moves to the tenth line
10%                 Move to 10% of the file
15|                 Move to the 15th column of the current line
w                   Jump to the beginning of the next word (word: separated by punctuation or spaces)
W                   Jump to the beginning of the next word (WORD: separated by spaces)
e                   Jump to the end of the next word (word: separated by punctuation or spaces)
E                   Jump to the end of the next word (WORD: separated by spaces)
b                   Jump to the beginning of the previous word (word: separated by punctuation or spaces)
B                   Jump to the beginning of the previous word (WORD: separated by spaces)
ge                  Jump to the end of the previous word
)                   Move forward one sentence (separated by periods)
(                   Move backward one sentence (separated by periods)
}                   Move forward one paragraph (separated by blank lines)
{                   Move backward one paragraph (separated by blank lines)
<enter>             Move to the first non-empty character of the next line
+                   Move to the first non-empty character of the next line (same as Enter key)
-                   Move to the first non-empty character of the previous line
H                   Move to the top of the screen
M                   Move to the middle of the screen
L                   Move to the bottom of the screen
fx                  Jump to the next occurrence of the character 'x', 2f/ can find the second forward slash
Fx                  Jump to the previous occurrence of the character 'x'
tx                  Jump to the character 'x' before the next occurrence
Tx                  Jump to the character 'x' before the previous occurrence
;                   Jump to the next result of the last f/t search
,                   Jump to the previous result of the last f/t search
<S-Left>            Hold SHIFT and press the left arrow key to move one word to the left
<S-Right>           Hold SHIFT and press the right arrow key to move one word to the right
<S-Up>              Hold SHIFT and press the up arrow key to scroll up
<S-Down>            Hold SHIFT and press the down arrow key to scroll down
gm                  Move to the middle of the line
gj                  Move the cursor down one line (ignores automatic line wrapping)
gk                  Move the cursor up one line (ignores automatic line wrapping)


##############################################################################
# Insert Mode: Entering and Exiting
##############################################################################

i                   Enter insert mode at the cursor position
I                   Enter insert mode at the beginning of the line
a                   Enter insert mode after the cursor
A                   Enter insert mode at the end of the line
o                   Insert a new line below and enter insert mode
O                   Insert a new line above and enter insert mode
gi                  Return to the last insert mode position
<ESC>               Exit insert mode
CTRL-[              Exit insert mode (equivalent to ESC, but more convenient)

##############################################################################
# INSERT MODE - Entered with commands like i, I, a, A, o, O
##############################################################################

<Up>                Move the cursor up
<Down>              Move the cursor down
<Left>              Move the cursor left
<Right>             Move the cursor right
<S-Left>            Hold SHIFT and press the left arrow key to move one word to the left
<S-Right>           Hold SHIFT and press the right arrow key to move one word to the right
<S-Up>              Hold SHIFT and press the up arrow key to scroll up
<S-Down>            Hold SHIFT and press the down arrow key to scroll down
<PageUp>            Scroll up one page
<PageDown>          Scroll down one page
<Delete>            Delete the character at the cursor position
<BS>                Backspace, delete the character before the cursor
<Home>              Jump to the beginning of the line
<End>               Jump to the end of the line
CTRL-W              Delete the word before the cursor
CTRL-O              Temporarily exit insert mode, execute a single command, and return to insert mode
CTRL-\ CTRL-O       Temporarily exit insert mode (cursor position preserved), execute a single command, and return to insert mode
CTRL-R 0            Insert the contents of register 0 (internal clipboard), you can replace 0 with a register name after CTRL-R
CTRL-R "            Insert the contents of the unnamed register, similar to pasting in insert mode with 'p'
CTRL-R =            Insert the result of an expression evaluation, followed by an equal sign and an expression
CTRL-R :            Insert the last command from the command line
CTRL-R /            Insert the last search keyword
CTRL-F              Auto-indent the line
CTRL-U              Delete all characters on the current line
CTRL-V {char}       Insert a non-numeric literal character
CTRL-V {number}     Insert an ASCII/Unicode character represented by three digits
CTRL-V 065          Insert a decimal ASCII character (two digits), e.g., 065 for 'A'
CTRL-V x41          Insert a hexadecimal ASCII character (three digits), e.g., x41 for 'A'
CTRL-V o101         Insert an octal ASCII character (three digits), e.g., o101 for 'A'
CTRL-V u1234        Insert a hexadecimal Unicode character (four digits)
CTRL-V U12345678    Insert a hexadecimal Unicode character (eight digits)
CTRL-K {ch1} {ch2}  Insert a digraph (see :h digraph), for quick input of Japanese characters or symbols
CTRL-D              Indent text forward
CTRL-T              Indent text backward



##############################################################################
#Text Editing
##############################################################################

r                   Replace the current character
R                   Enter replace mode until ESC is pressed
s                   Replace a character (delete the character under the cursor and enter insert mode, a count can be used before 's')
S                   Replace a line (delete the current line and enter insert mode, a count can be used before 'S')
cc                  Change the current line (delete the current line and enter insert mode), same as 'S'
cw                  Change the current word starting from the cursor position
ciw                 Change the word under the cursor
caw                 Change the word under the cursor, including leading and trailing spaces (if any)
c0                  Change to the beginning of the line
c^                  Change to the beginning of the line (first non-zero character)
c$                  Change to the end of the line
C                   Change to the end of the line (same as 'c$')
ci"                 Change the content within double quotes
ci'                 Change the content within single quotes
cib                 Change the content within parentheses
cab                 Change the content within parentheses (including parentheses themselves)
ci)                 Change the content within parentheses
ci]                 Change the content within square brackets
ciB                 Change the content within curly braces
caB                 Change the content within curly braces (including curly braces themselves)
ci}                 Change the content within curly braces
cit                 Change the content within XML tags
cis                 Change the current sentence
c2w                 Change the next two words
ct(                 Change until the opening parenthesis
c/apple             Change until the first "apple" after the cursor
x                   Delete the current character; a number can precede 'x,' e.g., 3x to delete three characters
X                   Delete the character before the cursor
dd                  Delete the current line
d0                  Delete to the beginning of the line
d^                  Delete to the beginning of the line (first non-zero character)
d$                  Delete to the end of the line
D                   Delete to the end of the line (same as 'd$')
dw                  Delete the current word
diw                 Delete the word under the cursor
daw                 Delete the word under the cursor, including leading and trailing spaces (if any)
di"                 Delete the content within double quotes
di'                 Delete the content within single quotes
dib                 Delete the content within parentheses
di)                 Delete the content within parentheses
dab                 Delete the content within parentheses (including parentheses themselves)
di]                 Delete the content within square brackets
diB                 Delete the content within curly braces
di}                 Delete the content within curly braces
daB                 Delete the content within curly braces (including curly braces themselves)
dit                 Delete the content within XML tags
dis                 Delete the current sentence
dip                 Delete the current paragraph (a paragraph is separated by blank lines before and after)
dap                 Delete the current paragraph (including leading and trailing blank lines)
d2w                 Delete the next two words
dt(                 Delete until the opening parenthesis
d/apple             Delete until the first "apple" before the cursor
dgg                 Delete to the beginning of the file
dG                  Delete to the end of the file
d}                  Delete the next paragraph
d{                  Delete the previous paragraph
u                   Undo
U                   Undo the entire line operation
CTRL-R              Redo the last 'u' command
J                   Join multiple lines into one line
.                   Repeat the last operation
~                   Swap the case (upper/lower) of the character
g~iw                Swap the case of the current word
gUiw                Convert the word to uppercase
guiw                Convert the current word to lowercase
guu                 Convert the entire line to lowercase
gUU                 Convert the entire line to uppercase
<<                  Decrease the indent
>>                  Increase the indent
==                  Auto-indent
CTRL-A              Increase a number
CTRL-X              Decrease a number


##############################################################################
# Copy and Paste
##############################################################################

p                   Paste after the cursor
P                   Paste before the cursor
v                   Start visual selection
y                   Copy the selected content
V                   Start visual selection line-wise
CTRL-V              Start visual selection block-wise
y$                  Copy from the current position to the end of the line
yy                  Copy the current line
Y                   Copy the current line, same as yy
yiw                 Copy the current word
3yy                 Copy the three lines under the cursor
v0                  Select from the current position to the beginning of the line
v$                  Select from the current position to the end of the line
viw                 Select the current word
vib                 Select what's inside the parentheses
vi)                 Select what's inside the parentheses
vi]                 Select what's inside the square brackets
viB                 Select what's inside the curly braces
vi}                 Select what's inside the curly braces
vis                 Select the content of the current sentence
vip                 Select the current paragraph (a paragraph is separated by blank lines before and after)
vap                 Select the current paragraph (including leading and trailing blank lines)
vab                 Select what's inside the parentheses (including the parentheses themselves)
va)                 Select what's inside the parentheses (including the parentheses themselves)
va]                 Select what's inside the square brackets (including the square brackets themselves)
vaB                 Select what's inside the curly braces (including the curly braces themselves)
va}                 Select what's inside the curly braces (including the curly braces themselves)
gv                  Reselect the last selected text
:set paste          Enable paste mode (avoid automatic indentation during pasting)
:set nopaste        Disable paste mode
"?yy                Copy the current line to register ?, where ? represents the register name (0-9)
"?d3j               Delete the three lines below the cursor and put them in register ?, where ? represents the register name (0-9)
"?p                 Paste the content of register ? after the cursor
"?P                 Paste the content of register ? before the cursor
:registers          Display the content of all registers
:[range]y           Copy a range, for example, :20,30y copies lines 20 to 30, :10y copies the 10th line
:[range]d           Delete a range, for example, :20,30d deletes lines 20 to 30, :10d deletes the 10th line
ddp                 Swap two lines: first, delete the current line, copy it to the register, and then paste it
"_[command]         Use [command] to delete content without copying (won't pollute registers)
"*[command]         Use [command] to copy content to the system clipboard (requires Vim version with clipboard support)



##############################################################################
# Text Objects - used with c, d, v, y, and other commands, generally in the form of <range i/a><type>
##############################################################################

$                   To the end of the line
0                   To the beginning of the line
^                   To the beginning of the line (first non-empty character)
tx                  To the character 'x' before the cursor position
fx                  To the character 'x' at the cursor position
iw                  Inside the word (excluding delimiters)
aw                  A word (including delimiters)
iW                  Inside the WORD (excluding delimiters)
aW                  A WORD (including delimiters)
is                  Inside the sentence (excluding delimiters)
as                  A sentence (including delimiters)
ip                  Inside the paragraph (excluding leading and trailing blank lines)
ap                  A paragraph (including leading and trailing blank lines)
ib                  Inside parentheses
ab                  Inside parentheses (including parentheses themselves)
iB                  Inside curly braces
aB                  Inside curly braces (including curly braces themselves)
i)                  Inside parentheses
a)                  Inside parentheses (including parentheses themselves)
i]                  Inside square brackets
a]                  Inside square brackets (including square brackets themselves)
i}                  Inside curly braces
a}                  Inside curly braces (including curly braces themselves)
i'                  Inside single quotes
a'                  Inside single quotes (including single quotes themselves)
i"                  Inside double quotes
a"                  Inside double quotes (including double quotes themselves)
2i)                 Inside two levels of parentheses outward
2a)                 Inside two levels of parentheses outward (including parentheses themselves)
2f)                 To the second occurrence of the parentheses
2t)                 To the character before the second occurrence of the parentheses



##############################################################################
# Search and Replace
##############################################################################

/pattern            Search for 'pattern' from the cursor position to the end of the file
?pattern            Search for 'pattern' from the cursor position to the beginning of the file
n                   Execute the previous search in the same direction
N                   Execute the previous search in the opposite direction
*                   Search forward for the word under the cursor
#                   Search backward for the word under the cursor
:s/p1/p2/g          Replace all instances of 'p1' with 'p2' in the current line
:%s/p1/p2/g         Replace all instances of 'p1' with 'p2' in the entire file
:%s/p1/p2/gc        Replace all instances of 'p1' with 'p2' in the entire file and prompt for each replacement
:10,20s/p1/p2/g     Replace all instances of 'p1' with 'p2' in lines 10 to 20
:.,ns/p1/p2/g       Replace all instances of 'p1' with 'p2' in the current line to 'n' lines ahead
:.,+10s/p1/p2/g     Replace all instances of 'p1' with 'p2' in the current line to 10 lines ahead of the current line
:.,$s/p1/p2/g       Replace all instances of 'p1' with 'p2' in the current line to the end of the file
:0,.s/p1/p2/g       Replace all instances of 'p1' with 'p2' in the first line to the current line
:%s/1\\2\/3/123/g   Replace "1\2/3" with "123" (use backslashes to escape special characters)
:%s/\r//g           Delete DOS carriage return characters (^M)


##############################################################################
#VISUAL MODE - Entered with v, V, or CTRL-V
##############################################################################

>                   Increase the indentation of the highlighted selection
<                   Decrease the indentation of the highlighted selection
d                   Delete the highlighted text
x                   Delete the highlighted text
c                   Change the text, i.e., delete the highlighted text and enter insert mode
s                   Change the text, i.e., delete the highlighted text and enter insert mode
y                   Copy the highlighted text
~                   Toggle the case of the selected text (uppercase to lowercase, and vice versa)
o                   Jump to the other end of the marked area
O                   Jump to the other end of the marked block
u                   Convert the highlighted area to lowercase
U                   Convert the highlighted area to uppercase
g CTRL-G            Display statistics for the selected area
<Esc>               Exit Visual Mode

##############################################################################
# Navigation and Jumping
##############################################################################

CTRL-O              Jump to the previous location
CTRL-I              Jump to the next location
CTRL-^              Jump to the alternate file (the previous file in the current window)
CTRL-]              Jump to the hyperlink under the current cursor position
CTRL-T              Return to the previous jump location
%                   Jump to the matching {}, (), or []
gd                  Jump to the local definition of the word under the cursor
gD                  Jump to the global definition of the word under the cursor
gf                  Open the file named under the cursor
[[                  Jump to the previous top-level function (e.g., in C using curly braces)
]]                  Jump to the next top-level function (e.g., in C using curly braces)
[m                  Jump to the previous member function
]m                  Jump to the next member function
[{                  Jump to the previous unmatched {
]}                  Jump to the next unmatched }
[(                  Jump to the previous unmatched (
])                  Jump to the next unmatched )
[c                  Jump to the previous difference (during diff mode)
]c                  Jump to the next difference (during diff mode)
[/                  Jump to the beginning of a C comment
]/                  Jump to the end of a C comment
``                  Go back to the last jump location
''                  Go back to the last jump location
`.                  Go back to the last edited location
'.                  Go back to the last edited location

##############################################################################
#File Operations
##############################################################################

:w                  Save the file
:w <filename>       Save the file with a specific name
:e <filename>       Open and edit a file
:saveas <filename>  Save the current file with a different name
:r <filename>       Read the contents of a file and insert them after the cursor
:r !dir             Capture the output of the 'dir' command and insert it after the cursor
:close              Close the current file
:q                  Quit (close) the current file
:q!                 Forcefully quit (discard changes)
:wa                 Save all open files
:cd <path>          Change Vim's current working directory
:pwd                Display Vim's current working directory
:new                Open a new window to edit a new file
:enew               Create a new file in the current window
:vnew               Edit a new file in a vertically split window
:tabnew             Edit a new file in a new tab page


##############################################################################
#Open File Operations
##############################################################################

:ls                 List open buffers
:bn                 Switch to the next buffer
:bp                 Switch to the previous buffer
:bd                 Delete the buffer
:b 1                Switch to buffer number 1
:b abc              Switch to the buffer with a filename starting with 'abc'
:badd <filename>    Add a file to the buffer list
:set hidden         Set hidden mode (unsaved buffers can be switched or closed)
:set nohidden       Disable hidden mode (unsaved buffers cannot be switched or closed)
n CTRL-^            Switch buffers - first enter the buffer number and then press CTRL + 6

##############################################################################
# Window Operations
##############################################################################

:sp <filename>      Split the window vertically and open the file 'filename' in the new window
:vs <filename>      Split the window horizontally and open the file 'filename' in the new window
CTRL-W s            Split the window horizontally
CTRL-W v            Split the window vertically
CTRL-W w            Cycle to the next window
CTRL-W W            Cycle to the previous window
CTRL-W p            Go to the previous accessed window
CTRL-W c            Close the current window
CTRL-W o            Close other windows, keeping only the current one
CTRL-W h            Go to the left window
CTRL-W j            Go to the window below
CTRL-W k            Go to the window above
CTRL-W l            Go to the right window
CTRL-W +            Increase the current window's height (you can prefix with a number)
CTRL-W -            Decrease the current window's height (you can prefix with a number)
CTRL-W <            Decrease the current window's width (you can prefix with a number)
CTRL-W >            Increase the current window's width (you can prefix with a number)
CTRL-W =            Make all windows the same size
CTRL-W H            Move the current window to the far left
CTRL-W J            Move the current window to the bottom
CTRL-W K            Move the current window to the top
CTRL-W L            Move the current window to the far right
CTRL-W x            Swap windows
CTRL-W f            Open the file under the cursor in a new window
CTRL-W gf           Open the file under the cursor in a new tab page
CTRL-W R            Rotate the windows
CTRL-W T            Move the current window to a new tab page
CTRL-W P            Jump to the preview window
CTRL-W z            Close the preview window
CTRL-W _            Vertically maximize the current window
CTRL-W |            Horizontally maximize the current window


##############################################################################
# Tab Page Operations
##############################################################################

:tabs               Show all tab pages
:tabe <filename>    Open the file 'filename' in a new tab page
:tabn               Next tab page
:tabp               Previous tab page
:tabc               Close the current tab page
:tabo               Close other tab pages
:tabn n             Switch to the nth tab page, e.g., :tabn 3 to switch to the third tab page
:tabm n             Move tab pages
:tabfirst           Switch to the first tab page
:tablast            Switch to the last tab page
:tab help           Open help in a tab page
:tab drop <file>    Jump to the file in another tab page or open it in a new tab page
:tab split          Open the current window's file in a new tab page
:tab ball           Open all files in buffers in tab pages
:set showtabline=?  Set to 0 to hide the tab labels, 1 to show them as needed, 2 to always show
ngt                 Switch to the nth tab page, e.g., 2gt switches to the second tab page
gt                  Next tab page
gT                  Previous tab page

##############################################################################
# 书签
##############################################################################

:marks              显示所有书签
ma                  保存当前位置到书签 a ，书签名小写字母为文件内，大写全局
'a                  跳转到书签 a所在的行
`a                  跳转到书签 a所在位置
`.                  跳转到上一次编辑的行
'A                  跳转到全文书签 A
['                  跳转到上一个书签
]'                  跳转到下一个书签
'<                  跳到上次可视模式选择区域的开始
'>                  跳到上次可视模式选择区域的结束
:delm a             删除缓冲区标签a
:delm A             删除文件标签A
:delm!              删除所有缓冲区标签(小写字母), 不能删除文件标签和数字标签
:delm A-Z           删除所有文件标签(大写字母)
:delm 0-9           删除所有数字标签(.viminfo)
:delm A-Z0-9        删除所有文件标签和数字标签

 
##############################################################################
# 常用设置
##############################################################################

:set nocompatible   设置不兼容原始 vi 模式（必须设置在最开头）
:set bs=?           设置BS键模式，现代编辑器为 :set bs=eol,start,indent
:set sw=4           设置缩进宽度为 4
:set ts=4           设置制表符宽度为 4
:set noet           设置不展开 tab 成空格
:set et             设置展开 tab 成空格
:set winaltkeys=no  设置 GVim 下正常捕获 ALT 键
:set nowrap         关闭自动换行
:set ttimeout       允许终端按键检测超时（终端下功能键为一串ESC开头的扫描码）
:set ttm=100        设置终端按键检测超时为100毫秒
:set term=?         设置终端类型，比如常见的 xterm
:set ignorecase     设置搜索忽略大小写(可缩写为 :set ic)
:set noignorecase   设置搜索不忽略大小写(可缩写为 :set noic)
:set smartcase      智能大小写，默认忽略大小写，除非搜索内容里包含大写字母
:set list           设置显示制表符和换行符
:set number         设置显示行号，禁止显示行号可以用 :set nonumber
:set relativenumber 设置显示相对行号（其他行与当前行的距离）
:set paste          进入粘贴模式（粘贴时禁用缩进等影响格式的东西）
:set nopaste        结束粘贴模式
:set spell          允许拼写检查
:set hlsearch       设置高亮查找
:set ruler          总是显示光标位置
:set incsearch      查找输入时动态增量显示查找结果
:set insertmode     Vim 始终处于插入模式下，使用 ctrl-o 临时执行命令
:set all            列出所有选项设置情况
:syntax on          允许语法高亮
:syntax off         禁止语法高亮


##############################################################################
# 帮助信息
##############################################################################

:h tutor            入门文档
:h quickref         快速帮助
:h index            查询 Vim 所有键盘命令定义
:h summary          帮助你更好的使用内置帮助系统
:h CTRL-H           查询普通模式下 CTRL-H 是干什么的
:h i_CTRL-H         查询插入模式下 CTRL-H 是干什么的
:h i_<Up>           查询插入模式下方向键上是干什么的
:h pattern.txt      正则表达式帮助
:h eval             脚本编写帮助
:h function-list    查看 VimScript 的函数列表 
:h windows.txt      窗口使用帮助
:h tabpage.txt      标签页使用帮助
:h +timers          显示对 +timers 特性的帮助
:h :!               查看如何运行外部命令
:h tips             查看 Vim 内置的常用技巧文档
:h set-termcap      查看如何设置按键扫描码
:viusage            NORMAL 模式帮助
:exusage            EX 命令帮助
:version            显示当前 Vim 的版本号和特性


##############################################################################
# 外部命令
##############################################################################

:!ls                运行外部命令 ls，并等待返回
:r !ls              将外部命令 ls 的输出捕获，并插入到光标后
:w !sudo tee %      sudo以后保存当前文件
:call system('ls')  调用 ls 命令，但是不显示返回内容
:!start notepad     Windows 下启动 notepad，最前面可以加 silent
:sil !start cmd     Windows 下当前目录打开 cmd
:%!prog             运行文字过滤程序，如整理 json格式 :%!python -m json.tool


##############################################################################
# Quickfix 窗口
##############################################################################

:copen              打开 quickfix 窗口（查看编译，grep等信息）
:copen 10           打开 quickfix 窗口，并且设置高度为 10
:cclose             关闭 quickfix 窗口
:cfirst             跳到 quickfix 中第一个错误信息
:clast              跳到 quickfix 中最后一条错误信息
:cc [nr]            查看错误 [nr]
:cnext              跳到 quickfix 中下一个错误信息
:cprev              跳到 quickfix 中上一个错误信息


##############################################################################
# 拼写检查
##############################################################################

:set spell          打开拼写检查
:set nospell        关闭拼写检查
]s                  下一处错误拼写的单词
[s                  上一处错误拼写的单词
zg                  加入单词到拼写词表中
zug                 撤销上一次加入的单词
z=                  拼写建议


##############################################################################
# 代码折叠
##############################################################################

za                  切换折叠
zA                  递归切换折叠
zc                  折叠光标下代码
zC                  折叠光标下所有代码
zd                  删除光标下折叠
zD                  递归删除所有折叠
zE                  删除所有折叠
zf                  创建代码折叠
zF                  指定行数创建折叠
zi                  切换折叠
zm                  所有代码折叠一层
zr                  所有代码打开一层
zM                  折叠所有代码，设置 foldlevel=0，设置 foldenable
zR                  打开所有代码，设置 foldlevel 为最大值
zn                  折叠 none，重置 foldenable 并打开所有代码
zN                  折叠 normal，重置 foldenable 并恢复所有折叠
zo                  打开一层代码
zO                  打开光标下所有代码折叠


##############################################################################
# 宏录制
##############################################################################

qa                  开始录制名字为 a 的宏
q                   结束录制宏
@a                  播放名字为 a 的宏
@@                  播放上一个宏
@:                  重复上一个ex命令（即冒号命令）


##############################################################################
# 其他命令
##############################################################################

CTRL-X CTRL-F       插入模式下文件路径补全
CTRL-X CTRL-O       插入下 Omnifunc 补全
CTRL-X CTRL-N       插入模式下关键字补全
CTRL-X CTRL-E       插入模式下向上滚屏
CTRL-X CTRL-Y       插入模式下向下滚屏
CTRL-E              向上滚屏
CTRL-Y              向下滚屏
CTRL-G              显示正在编辑的文件名，以及大小和位置信息
g CTRL-G            显示文件的：大小，字符数，单词数和行数，可视模式下也可用
zz                  调整光标所在行到屏幕中央
zt                  调整光标所在行到屏幕上部
zb                  调整光标所在行到屏幕下部
ga                  显示光标下字符的 ascii 码或者 unicode 编码
g8                  显示光标下字符的 utf-8 编码字节序
gi                  回到上次进入插入的地方，并切换到插入模式
K                   查询光标下单词的帮助
ZZ                  保存文件（如果有改动的话），并关闭窗口
ZQ                  不保存文件关闭窗口
CTRL-PgUp           上个标签页，GVim OK，部分终端软件需设置对应键盘码
CTRL-PgDown         下个标签页，GVim OK，部分终端软件需设置对应键盘码
CTRL-R CTRL-W       命令模式下插入光标下单词
CTRL-INSERT         复制到系统剪贴板（GVIM）
SHIFT-INSERT        粘贴系统剪贴板的内容（GVIM）
:set ff=unix        设置换行为 unix
:set ff=dos         设置换行为 dos
:set ff?            查看换行设置
:set nohl           清除搜索高亮
:set termcap        查看会从终端接收什么以及会发送给终端什么命令
:set guicursor=     解决 SecureCRT/PenguiNet 中 NeoVim 局部奇怪字符问题
:set t_RS= t_SH=    解决 SecureCRT/PenguiNet 中 Vim8.0 终端功能奇怪字符
:set fo+=a          开启文本段的实时自动格式化
:earlier 15m        回退到15分钟前的文件内容
:.!date             在当前窗口插入时间
:%!xxd              开始二进制编辑
:%!xxd -r           保存二进制编辑
:r !curl -sL {URL}  读取 url 内容添加到光标后
:g/^\s*$/d          删除空行
:g/green/d          删除所有包含 green 的行
:v/green/d          删除所有不包含 green 的行
:g/gladiolli/#      搜索单词打印结果，并在结果前加上行号
:g/ab.*cd.*efg/#    搜索包含 ab,cd 和 efg 的行，打印结果以及行号
:v/./,/./-j         压缩空行
:Man bash           在 Vim 中查看 man，先调用 :runtime! ftplugin/man.vim 激活
/fred\|joe          搜索 fred 或者 joe
/\<\d\d\d\d\>       精确搜索四个数字
/^\n\{3}            搜索连续三个空行


##############################################################################
# Plugin - https://github.com/tpope/vim-commentary
##############################################################################

gcc                 注释当前行
gc{motion}          注释 {motion} 所标注的区域，比如 gcap 注释整段
gci{                注释大括号内的内容
gc                  在 Visual Mode 下面按 gc 注释选中区域
:7,17Commentary     注释 7 到 17 行


##############################################################################
# Plugin - https://github.com/junegunn/vim-easy-align
##############################################################################

:EasyAlign =        以第一个匹配的=为中心对齐
:EasyAlign *=       匹配并且对齐所有=


##############################################################################
# Plugin - https://github.com/tpope/vim-unimpaired
##############################################################################

[space              向上插入空行
]space              向下插入空行
[e                  替换当前行和上一行
]e                  替换当前行和下一行
[x                  XML 编码
]x                  XML 解码
[u                  URL 编码
]u                  URL 解码
[y                  C 字符串编码
]y                  C 字符串解码
[q                  上一个 quickfix 错误
]q                  下一个 quickfix 错误
[Q                  第一个 quickfix 错误
]Q                  最后一个 quickfix 错误
[f                  切换同目录里上一个文件
]f                  切换同目录里下一个文件
[os                 设置 :set spell
]os                 设置 :set nospell
=os                 设置 :set invspell
[on                 显示行号
]on                 关闭行号
[ol                 显示回车和制表符 :set list
]ol                 不显示回车和制表符 :set nolist
[b                  缓存切换到上一个文件，即 :bp
]b                  缓存切换到下一个文件，即 :bn
[B                  缓存切换到第一个文件，即 :bfirst
]B                  缓存切换到最后一个文件，即 :blast


##############################################################################
# Plugin - https://github.com/skywind3000/asyncrun.vim
##############################################################################

:AsyncRun ls        异步运行命令 ls 结果输出到 quickfix 使用 :copen 查看
:AsyncRun -raw ls   异步运行命令 ls 结果不匹配 errorformat


##############################################################################
# Plugin - https://github.com/gaving/vim-textobj-argument
##############################################################################

cia                 改写函数参数
caa                 改写函数参数（包括逗号分隔）
dia                 删除函数参数
daa                 删除函数参数（包括逗号分隔）
via                 选取函数参数
vaa                 选取函数参数（包括逗号分隔）
yia                 复制函数参数
yaa                 复制函数参数（包括逗号分隔）


##############################################################################
# 网络资源
##############################################################################

最新版本            https://github.com/vim/vim   
Windows 最新版      https://github.com/vim/vim-win32-installer/releases
插件浏览            http://vimawesome.com
reddit              https://www.reddit.com/r/vim/
正确设置 ALT/BS 键  http://www.skywind.me/blog/archives/2021
视频教程            http://vimcasts.org/
中文帮助            http://vimcdoc.sourceforge.net/doc/help.html
中文版入门到精通    https://github.com/wsdjeg/vim-galore-zh_cn
五分钟脚本入门      http://www.skywind.me/blog/archives/2193
脚本精通            http://learnvimscriptthehardway.stevelosh.com/
中文脚本帮助        vimcdoc.sourceforge.net/doc/eval.html
十六年使用经验      http://zzapper.co.uk/vimtips.html
配色方案            http://vimcolors.com/


##############################################################################
# TIPS
##############################################################################

- 永远不要用 CTRL-C 代替 <ESC> 完全不同的含义，容易错误中断运行的后台脚本
- 很多人使用 CTRL-[ 代替 <ESC>，左手小指 CTRL，右手小指 [ 熟练后很方便
- 某些终端中使用 Vim 8 内嵌终端如看到奇怪字符，使用 :set t_RS= t_SH= 解决
- 某些终端中使用 Vim 8.2+ 会看到一些奇怪字符，使用 :set t_TI= t_TE= 解决
- 某些终端中使用 NeoVim 如看到奇怪字符，使用 :set guicursor= 解决
- 使用 MS-Terminal 如果进入 Vim/NVim 会默认替换模式设置 :set t_u7= 解决
- 多使用 ciw, ci[, ci", ci( 以及 diw, di[, di", di( 命令来快速改写/删除文本
- 在行内左右移动光标时，多使用w b e或W B E，而不是h l或方向键，这样会快很多
- SHIFT 相当于移动加速键， w b e 移动光标很慢，但是 W B E 走的很快
- 自己要善于总结新技巧，比如移动到行首非空字符时用 0w 命令比 ^ 命令更容易输入
- 在空白行使用 dip 命令可以删除所有临近的空白行，viw 可以选择连续空白
- 缩进时使用 >8j  >}  <ap  >ap  =i}  == 会方便很多
- 插入模式下，当你发现一个单词写错了，应该多用 CTRL-W 这比 <BackSpace> 快
- y d c 命令可以很好结合 f t 和 /X 比如 dt) 和 y/end<cr>
- c d x 命令会自动填充寄存器 "1 到 "9 , y 命令会自动填充 "0 寄存器
- 用 v 命令选择文本时，可以用 o 掉头选择，有时很有用
- 写文章时，可以写一段代码块，然后选中后执行 :!python 代码块就会被替换成结果
- 搜索后经常使用 :nohl 来消除高亮，使用很频繁，可以 map 到 <BackSpace> 上
- 搜索时可以用 CTRL-R CTRL-W 插入光标下的单词，命令模式也能这么用
- 映射按键时，应该默认使用 noremap ，只有特别需要的时候使用 map
- 当你觉得做某事很低效时，你应该停下来，u u u u 然后思考正确的高效方式来完成
- 用 y复制文本后，命令模式中 CTRL-R 然后按双引号 0 可以插入之前复制内容
- 某些情况下 Vim 绘制高亮慢，滚屏刷新慢可以试试 set re=1 使用老的正则引擎
- Windows 下的 GVim 可以设置 set rop=type:directx,renmode:5 增强显示


##############################################################################
# References
##############################################################################

https://github.com/groenewege/vimrc/blob/master/vim_cheat_sheet.txt
http://blog.g-design.net/post/4789778607/vim-cheat-sheet
http://www.keyxl.com/aaa8263/290/VIM-keyboard-shortcuts.htm
http://jmcpherson.org/editing.html
http://www.fprintf.net/vimCheatSheet.html
http://www.ouyaoxiazai.com/article/24/654.html
http://bbs.it-home.org/thread-80794-1-1.html
http://www.lpfrx.com/wp-content/uploads/2008/09/vi.jpg
http://michael.peopleofhonoronly.com/vim/
https://github.com/hobbestigrou/vimtips-fortune/blob/master/fortunes/vimtips
https://github.com/glts/vim-cottidie/blob/master/autoload/cottidie/tips



# vim: set ts=4 sw=4 tw=0 noet noautoindent fdm=manual :

